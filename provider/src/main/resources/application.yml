spring:
  application:
    name: provider
  datasource:
    url: jdbc:mysql://localhost:3306/xqc?useUnicode=true&characterEncoding=utf-8
    username: root
    password: 123456
    type: com.alibaba.druid.pool.DruidDataSource
    driver-class-name: com.mysql.jdbc.Driver
    filters: stat
    maxActive: 20
    initialSize: 5
    minIdle: 5
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
eureka:
  client:
    serviceUrl:
      #Authenticating with the Eureka Server => 需要eureka-server端进行添加支持
      #http://user:password@localhost:8761/eureka 基于http的authentication会自动触发，如果你的路径是这样写的。
      #如果要更加复杂的服务注册认证，需要1. create a @Bean of type DiscoveryClientOptionalArgs =>  2. inject ClientFilter instances into it
      defaultZone: http://peer1:9001/eureka/,http://peer2:9002/eureka/
    prefer-same-zone-eureka: true #倾向于调用同一个zone的服务
  instance:
    hostname: provider
    lease-expiration-duration-in-seconds: 6  #配置在服务提供端, 失效时间 6s内没有发renew就认为该服务失效
    lease-renewal-interval-in-seconds: 2  #配置在服务提供端，renew的频率 这里是2s发一次
    health-check-url: ${server.servletPath}/health
    status-page-url: ${server.servletPath}/info

logging:
#  file: /logs/stn.log
  level:
    root: debug
#actuator 配置
management:
  endpoints:
    enabled-by-default: true
---

spring:
  profiles: provider0
server:
  port: 2000
eureka:
  instance:
    metadata-map:
      zone: zone0
---

spring:
  profiles: provider1
server:
  port: 2001
eureka:
  instance:
    metadata-map:
      zone: zone1
---

spring:
  profiles: provider2
server:
  port: 2002